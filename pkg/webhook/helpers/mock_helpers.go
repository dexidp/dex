// Code generated by MockGen. DO NOT EDIT.
// Source: helpers.go
//
// Generated by this command:
//
//	mockgen -destination=mock_helpers.go -package=helpers --source=helpers.go WebhookHTTPHelpers
//
// Package helpers is a generated GoMock package.
package helpers

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockWebhookHTTPHelpers is a mock of WebhookHTTPHelpers interface.
type MockWebhookHTTPHelpers struct {
	ctrl     *gomock.Controller
	recorder *MockWebhookHTTPHelpersMockRecorder
}

// MockWebhookHTTPHelpersMockRecorder is the mock recorder for MockWebhookHTTPHelpers.
type MockWebhookHTTPHelpersMockRecorder struct {
	mock *MockWebhookHTTPHelpers
}

// NewMockWebhookHTTPHelpers creates a new mock instance.
func NewMockWebhookHTTPHelpers(ctrl *gomock.Controller) *MockWebhookHTTPHelpers {
	mock := &MockWebhookHTTPHelpers{ctrl: ctrl}
	mock.recorder = &MockWebhookHTTPHelpersMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebhookHTTPHelpers) EXPECT() *MockWebhookHTTPHelpersMockRecorder {
	return m.recorder
}

// CallWebhook mocks base method.
func (m *MockWebhookHTTPHelpers) CallWebhook(jsonData []byte) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CallWebhook", jsonData)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CallWebhook indicates an expected call of CallWebhook.
func (mr *MockWebhookHTTPHelpersMockRecorder) CallWebhook(jsonData any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CallWebhook", reflect.TypeOf((*MockWebhookHTTPHelpers)(nil).CallWebhook), jsonData)
}
