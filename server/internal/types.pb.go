// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: server/internal/types.proto

// Package internal holds protobuf types used by the server.

package internal

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RefreshToken is a message that holds refresh token data used by dex.
type RefreshToken struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RefreshId     string                 `protobuf:"bytes,1,opt,name=refresh_id,json=refreshId,proto3" json:"refresh_id,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshToken) Reset() {
	*x = RefreshToken{}
	mi := &file_server_internal_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshToken) ProtoMessage() {}

func (x *RefreshToken) ProtoReflect() protoreflect.Message {
	mi := &file_server_internal_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshToken.ProtoReflect.Descriptor instead.
func (*RefreshToken) Descriptor() ([]byte, []int) {
	return file_server_internal_types_proto_rawDescGZIP(), []int{0}
}

func (x *RefreshToken) GetRefreshId() string {
	if x != nil {
		return x.RefreshId
	}
	return ""
}

func (x *RefreshToken) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// IDTokenSubject represents both the userID and connID which is returned
// as the "sub" claim in the ID Token.
type IDTokenSubject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ConnId        string                 `protobuf:"bytes,2,opt,name=conn_id,json=connId,proto3" json:"conn_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IDTokenSubject) Reset() {
	*x = IDTokenSubject{}
	mi := &file_server_internal_types_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IDTokenSubject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDTokenSubject) ProtoMessage() {}

func (x *IDTokenSubject) ProtoReflect() protoreflect.Message {
	mi := &file_server_internal_types_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDTokenSubject.ProtoReflect.Descriptor instead.
func (*IDTokenSubject) Descriptor() ([]byte, []int) {
	return file_server_internal_types_proto_rawDescGZIP(), []int{1}
}

func (x *IDTokenSubject) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *IDTokenSubject) GetConnId() string {
	if x != nil {
		return x.ConnId
	}
	return ""
}

var File_server_internal_types_proto protoreflect.FileDescriptor

const file_server_internal_types_proto_rawDesc = "" +
	"\n" +
	"\x1bserver/internal/types.proto\x12\binternal\"C\n" +
	"\fRefreshToken\x12\x1d\n" +
	"\n" +
	"refresh_id\x18\x01 \x01(\tR\trefreshId\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\"B\n" +
	"\x0eIDTokenSubject\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x17\n" +
	"\aconn_id\x18\x02 \x01(\tR\x06connIdB'Z%github.com/dexidp/dex/server/internalb\x06proto3"

var (
	file_server_internal_types_proto_rawDescOnce sync.Once
	file_server_internal_types_proto_rawDescData []byte
)

func file_server_internal_types_proto_rawDescGZIP() []byte {
	file_server_internal_types_proto_rawDescOnce.Do(func() {
		file_server_internal_types_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_server_internal_types_proto_rawDesc), len(file_server_internal_types_proto_rawDesc)))
	})
	return file_server_internal_types_proto_rawDescData
}

var file_server_internal_types_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_server_internal_types_proto_goTypes = []any{
	(*RefreshToken)(nil),   // 0: internal.RefreshToken
	(*IDTokenSubject)(nil), // 1: internal.IDTokenSubject
}
var file_server_internal_types_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_server_internal_types_proto_init() }
func file_server_internal_types_proto_init() {
	if File_server_internal_types_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_server_internal_types_proto_rawDesc), len(file_server_internal_types_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_server_internal_types_proto_goTypes,
		DependencyIndexes: file_server_internal_types_proto_depIdxs,
		MessageInfos:      file_server_internal_types_proto_msgTypes,
	}.Build()
	File_server_internal_types_proto = out.File
	file_server_internal_types_proto_goTypes = nil
	file_server_internal_types_proto_depIdxs = nil
}
